import esbuild from "esbuild";
import * as path from "path";
import { readFileSync } from "fs";

export function resolve(specifier, context, nextResolve) {
  if (specifier.startsWith("drizzle://")) {
    if (!specifier.endsWith(".ts")) {
      const url = specifier.slice("drizzle://".length).toString();
      return nextResolve(url);
    }

    return {
      shortCircuit: true,
      url: specifier,
    };
  }

  const { parentURL: url } = context;
  const parentURL = url?.startsWith("drizzle://")
    ? new URL(`file://${path.resolve(url.slice("drizzle://".length))}`)
    : url;

  // Let Node.js handle all other specifiers.
  return nextResolve(specifier, { ...context, parentURL });
}

export async function load(url, context, defaultLoad) {
  if (url.startsWith("drizzle://")) {

    const path = url.slice("drizzle://".length).trim();
    const file = readFileSync(path, "utf-8");
    if (path.endsWith(".ts") || path.endsWith(".mts")) {
      const source = esbuild.transformSync(file, {
        loader: "ts",
        format: "esm",
      });
      return {
        format: "module",
        shortCircuit: true,
        source: source.code,
      };
    }
  }

  // let Node.js handle all other URLs
  return defaultLoad(url, context, defaultLoad);
}
